// 网络通信的格式
{
    // 登录分两步, http登录和ws登录
    // 先进行http登录, 向服务器发送用户名和密码, 得到sid
    // 然后向服务器的消息端口和文件端口建立ws连接, 发送sid以认证: 正确则保留连接, 错误/超时5s则断开连接
    "登录": {
        "http": {
            // POST /login
            "请求": {
                // 用户ID, 数字
                "id": 10086,
                // 密码, 字符串
                "psw": "password"
            },
            "回复": {
                // 请求字段缺失或数值类型错误
                "请求格式错误": "返回错误码400, 无json返回",
                "登陆失败": {
                    "res": "NO"
                },
                "登录成功": {
                    "res": "OK",
                    // sid是sesionID, 一段base64, URL编码的随机字符串
                    "sid": "random_string"
                }
            }
        },
        // 目前设计的ws连接有2个, 一个文件, 一个消息. 两个连接 登录过程一致
        "ws": {
            "请求": {
                "op": "login",
                "sid": "random_string"
            },
            "回复": {
                // 若失败/超时, 返回这条json后服务器就主动断开连接
                "登陆失败/超时": {
                    "op": "login",
                    "res": "NO"
                },
                "登录成功": {
                    "op": "login",
                    "res": "OK"
                }
            }
        }
    },
    // A加B为好友, A先向服务器发送http请求, 服务器检查请求格式/检查是否已经为好友后http回复A
    // 随后在B上线后, 服务器通过ws通知B(ws两个连接中的消息连接)
    // B在用户操作(同意/拒绝)后, 也向服务器发送http请求, 服务器检查请求格式/检查是否已经为好友后http回复B
    // 若B同意, 则服务器在数据库中为AB两人建立一个会话, 使用上一句中的http向B返回会话号
    // 若B拒绝, 则在数据库中删除A->B的好友关系
    // 随后在A上线后, 服务器通过ws通知A加好友结果/会话号
    "加好友": {
        "http": {
            "请求": {
                // POST /addfriend
                "A的好友请求": {
                    "sid": "random_string",
                    // B的uid
                    "frid": 10086
                },
                // POST /resfriend
                "B接受好友的http请求": {
                    "sid": "random_string",
                    // A的uid
                    "frid": 10086,
                    "ans": "accept"
                },
                // POST /resfriend
                "B拒绝好友的http请求": {
                    "sid": "random_string",
                    // A的uid
                    "frid": 10086,
                    "ans": "refuse"
                }
            },
            "回复": {
                // 请求字段缺失或数值类型错误
                "请求格式错误": "返回错误码400, 无json返回",
                "sid错误": {
                    "res": "NO",
                    "reason": "wrong sid"
                },
                "已是好友/已发送单方向好友申请": {
                    "res": "NO",
                    "reason": "already friend"
                },
                // 数据库错误详情会保存在服务器端日志, 调试有问题找后端
                "数据库中添加/删除好友失败": {
                    "res": "NO",
                    "reason": "db err"
                },
                "服务器成功收到好友请求": {
                    "res": "OK",
                    // 若B接受好友申请, 则返回AB间的会话号
                    "conv_id": 123
                }
            }
        },
        "ws": {
            "服务器把来自A的好友申请告诉B": {
                "op": "friend request",
                // A的uid
                "frid": 10086,
                "name": "Tom"
            },
            "服务器把B的答复告诉A": {
                "op": "friend answer",
                // B的uid
                "frid": 10086,
                "ans": "accept/refuse",
                // 若B接受好友申请, 则返回AB间的会话号
                "conv_id": 123
            }
        }
    }
}